-- Simple test case for local materialized views with synchronous local updates
CREATE TABLE t (p1 int, p2 int, c int, v int, primary key ((p1,p2),c));
{
	"status" : "ok"
}
-- a local view - with identical partition key
CREATE MATERIALIZED VIEW tv AS SELECT * FROM t WHERE p1 IS NOT NULL AND p2 IS NOT NULL AND c IS NOT NULL AND v IS NOT NULL PRIMARY KEY ((p1,p2),v,c);
{
	"status" : "ok"
}
ALTER MATERIALIZED VIEW tv WITH sync_local_view_updates = true;
{
	"status" : "ok"
}
INSERT INTO t (p1, p2, c, v) VALUES (1,2,3,4);
{
	"status" : "ok"
}
INSERT INTO t (p1, p2, c, v) VALUES (2,3,4,5);
{
	"status" : "ok"
}
SELECT * FROM tv;
{
	"rows" : 
	[
		{
			"c" : "4",
			"p1" : "2",
			"p2" : "3",
			"v" : "5"
		},
		{
			"c" : "3",
			"p1" : "1",
			"p2" : "2",
			"v" : "4"
		}
	]
}
-- a local index - with underlying local view
CREATE INDEX ON t(v);
{
	"status" : "ok"
}
ALTER MATERIALIZED VIEW t_v_idx_index WITH sync_local_view_updates = true;
{
	"status" : "ok"
}
INSERT INTO t (p1, p2, c, v) VALUES (3,4,5,6);
{
	"status" : "ok"
}
INSERT INTO t (p1, p2, c, v) VALUES (4,5,6,6);
{
	"status" : "ok"
}
SELECT * FROM t WHERE v = 6;
{
	"rows" : 
	[
		{
			"c" : "6",
			"p1" : "4",
			"p2" : "5",
			"v" : "6"
		},
		{
			"c" : "5",
			"p1" : "3",
			"p2" : "4",
			"v" : "6"
		}
	]
}
ALTER MATERIALIZED VIEW tv WITH sync_local_view_updates = false;
{
	"status" : "ok"
}
ALTER MATERIALIZED VIEW t_v_idx_index WITH sync_local_view_updates = false;
{
	"status" : "ok"
}
